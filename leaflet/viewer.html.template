
<!DOCTYPE html>
<html>
<head>
	
	<title>DYFI4 Event Viewer</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
<!--
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.1.0/dist/leaflet.css" integrity="sha512-wcw6ts8Anuw10Mzh9Ytw4pylW8+NAD4ch3lqm9lzAsTxg0GFeJgoAtxuCLREZSC5lUXdVyo/7yfsqFjQ4S+aKw==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.1.0/dist/leaflet.js" integrity="sha512-mNqn2Wg7tSToJhvHcqfzLMU6J4mkOImSPTxVZAdo+lcPlk+GhZmYgACEe0x35K7YzW1zJ7XyJV/TT1MrdXvMcA==" crossorigin=""></script> 
-->

    <link rel="stylesheet" href="inc/leaflet.css" />
    <script src="inc/leaflet.js"></script>
	<style>
		#map {
			width: 800px;
			height: 600px;
		}
        .info {
            padding: 6px 8px;
            font: 14px/16px Arial, Helvetica, sans-serif;
            background: white;
            background: rgba(255,255,255,0.8);
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
            border-radius: 5px;
        }
        .info h4 {
            margin: 0 0 5px;
            color: #777;
        }
        .legend {
            line-height: 18px;
            color: #555;
        }
        .legend i {
            width: 18px;
            height: 18px;
            float: left;
            margin-right: 8px;
            opacity: 0.7;
        }                            
	</style>

	
</head>
<body>

<div id='map'></div>

<script src="__DATAFILE__" type="text/javascript"></script>

<script>
	var map = L.map('map',{ zoomControl:true });

    tileLink_MB='https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
    tileLink_NG='https://services.arcgisonline.com/arcgis/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}';

	L.tileLayer(tileLink_NG, {
		maxZoom: 12,
        minZoom: 6,
		attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
			'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
		id: 'mapbox.light'
	}).addTo(map);


	function onEachFeature(feature, layer) {
		var popupContent = feature.id;
        if (ii = feature.properties.intensity) {
                  popupContent += "<br>Intensity: "+ii;
        }
        if (nresp = feature.properties.nresp) {
                  popupContent += "<br>Responses: "+nresp;
        }
		layer.bindPopup(popupContent);
	}

        var starIcon = L.icon({
	    iconUrl: 'icons/star.png',
	    iconSize:     [18, 18] // size of the icon
	});

    var colorsCdi = {
      9 : '#ec2516',
      8 : '#ff701f',
      7 : '#fdca2c',
      6 : '#f7f835',
      5 : '#95f879',
      4 : '#7efbdf',
      3 : '#82f9fb',
      2 : '#dfe6fe',
      1 : 'white',
    };

    function getFillColor(intensity) {
      ii = parseInt(intensity+0.01);
      ii = (ii < 1)? 1 : ii;
      return colorsCdi[ii];
    }

    function geocodedStyle(feature,layer) {
        fillColor = "#ffffff";
        fillOpacity = 0.1;
        if (intensity = feature.properties.intensity) {
          fillColor = getFillColor(intensity);
        }
        if (nresp = feature.properties.nresp) {
          fillOpacity = nresp >= 10 ? 1.0 : 0.3;
        }
        return {
            stroke: true,
            color: "grey",
            weight: 0.5,
            fill: true,
            fillColor: fillColor,
            fillOpacity: fillOpacity,
        }
    }

    var eventEpicenter;
    geocodedLayer=L.geoJSON(data, {
        filter: function(feature) {
            if (feature.properties.name=="Epicenter") {
                eventEpicenter=feature;
                return 0;
            }
            else { return 1 };
        },
        onEachFeature: onEachFeature,
        style: geocodedStyle,
        }).addTo(map);

    if (eventEpicenter) {
        var latlng=eventEpicenter.geometry.coordinates;
        var lnlat={'lat':latlng['lng'],
            'lng':latlng['lat'],
        };
        popupContent='';
        p=eventEpicenter.properties;
        for (var name in p) {
            popupContent+=name+': '+p[name]+'<br>\n'
        };

        epicenterLayer=L.marker(
            {'lat':latlng[1],'lng':latlng[0]},
            {icon: starIcon}
        ).bindPopup(popupContent).addTo(map);
    }

    if (!(typeof eventEpicenter === 'undefined')) {
        centerCoords = eventEpicenter.geometry.coordinates;
        map.setView(centerCoords.reverse(),7);
        
    } else {
          map.fitBounds(geocodedLayer.getBounds());
    }

    // A very basic legend

    var legend = L.control({position: 'bottomright'});
    legend.onAdd = function (map) {
    var div = L.DomUtil.create('div', 'info legend'),
        grades = ['I','II','III','IV','V','VI','VII','VIII','IX+'],
        labels = [];

    for (var i = 1; i < grades.length; i++) {
        color=getFillColor(i);
        div.innerHTML +=
            '<i style="background:' + color + '"> </i> ' +
            grades[i] + '</br>\n';
        }
        return div;
    };
    legend.addTo(map);

</script>

</body>
</html>
