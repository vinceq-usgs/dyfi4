#! /usr/bin/perl

use strict;
use warnings;

my $ssh = '/usr/bin/ssh';
my $rsync = '/usr/bin/rsync';
my $local_dir = "/home/shake/ciim3/incoming";

# Grab entries from new form on ciimwebpas

my $verbose = (grep /verbose/,@ARGV);
my $check = (grep /check/,@ARGV);
my $me = $ENV{'HOST'} || $ENV{'HOSTNAME'};
if ($me =~ /dyfi2/) {
       $me = 'vmdyfi2';
}
elsif ($me =~ /dyfi1/) {
	$me = 'vmdyfi1';
}


my $remotetemplate='vinceq@%s-acquisition.cr.usgs.gov';
my @remotenames = qw(dev01 dev02 prod01 prod02);

my $remotedirtemplate = '/data/write/%s/earthquake-dyfi-response/incoming.'
	. $me;

mkdir $local_dir,0777 unless (-e $local_dir);

my $remove = '--remove-sent-files';
#$remove = '';
my $synctemplate = "$rsync $remove --exclude 'tmp.*' "
         . "--timeout=60 "
         . "-ulpotgrz %s:%s/. $local_dir/";

foreach my $server (@remotenames) {
  my $fullserver = sprintf($remotetemplate,$server); 
  my $remotedir = sprintf($remotedirtemplate,$server);
  my $command = sprintf $synctemplate,$fullserver,$remotedir;

  if ($check) {
    $command = "$ssh  $fullserver ls -ltF $remotedir";
    print "$command\n" if ($verbose);
    my $result = `$command`;
    my $numlines = scalar (my @tmp = split /\n/,$result);
    my $text = ($numlines > 10) ? "Pending $numlines entries on $server\n" : "$server:\n$result";
    print $text;
    next;
  } 
  print "$command\n" if ($verbose);
  my $result = `$command`;
  print $result if ($verbose);
}
    

